{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mkant\\\\webclientreact\\\\src\\\\ChatPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const webSocket = useRef(null);\n  const chatInput = useRef();\n  const recieverInput = useRef();\n  const [leftContent, setLeftContent] = useState([]);\n  const [rightContent, setRightContent] = useState([]);\n  const [usersContent, setUsersContent] = useState([]);\n  const [sessionID, setSessionID] = useState(\"\");\n  let rightContentRef = useRef();\n  let leftContentRef = useRef();\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\") === null) navigate(\"/\");\n    isConnected();\n  }, []);\n  useEffect(() => {\n    rightContentRef.current = rightContent;\n  }, [rightContent]);\n  useEffect(() => {\n    leftContentRef.current = leftContent;\n    var objDiv = document.getElementById(\"chatForm\");\n    objDiv.scrollTo(0, objDiv.scrollHeight);\n  }, [leftContent]);\n\n  function messageToAll(e) {\n    const messageText = chatInput.current.value;\n    setLeftContent(leftContentRef.current + \"YOU: \" + messageText + \"\\n\");\n    setRightContent(rightContentRef.current + getNewLineCount(messageText));\n    chatInput.current.value = \"\";\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"message\": sessionStorage.getItem('token') + \": \" + messageText,\n        \"sessionID\": sessionID,\n        \"sender\": sessionStorage.getItem('token')\n      })\n    };\n    fetch('http://localhost:8080/ChatServer/messages/all', requestOptions).then(res => res.text()).then(res => console.log(res));\n  }\n\n  function updateUserList(e) {\n    const requestOptions = {\n      method: 'GET'\n    };\n    fetch('http://localhost:8080/ChatServer/users/loggedIn', requestOptions).then(res => res.json()).then(data => setUsersContent(data.message));\n  }\n\n  function privateMessage(e) {\n    const messageText = chatInput.current.value;\n    chatInput.current.value = \"\";\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"message\": sessionStorage.getItem('token') + \": \" + messageText,\n        \"sessionID\": sessionID,\n        \"sender\": sessionStorage.getItem('token')\n      })\n    };\n    fetch('http://localhost:8080/ChatServer/messages/' + recieverInput.current.value, requestOptions).then(res => {\n      if (res.status === 200) {\n        setLeftContent(leftContentRef.current + \"YOU: \" + messageText + \"\\n\");\n        setRightContent(rightContentRef.current + getNewLineCount(messageText));\n      } else {\n        setLeftContent(leftContentRef.current + \"Cannot send message to user - \" + recieverInput.current.value + \"\\n\");\n        setRightContent(rightContentRef.current + getNewLineCount(\"Cannot send message to user - \" + recieverInput.current.value));\n      }\n    });\n  }\n\n  function isConnected(e) {\n    const requestOptions = {\n      method: 'GET'\n    };\n    fetch('http://localhost:8080/ChatServer/users/loggedIn', requestOptions).then(res => res.json()).then(data => {\n      if (data.message.includes(sessionStorage.getItem(\"token\") + \"\\n\")) {\n        logOutWhenNotConnected();\n      } else {\n        webSocket.current = new WebSocket('ws://localhost:8080/ChatServer/ws');\n\n        webSocket.current.onopen = () => {\n          webSocket.current.send(sessionStorage.getItem(\"token\"));\n          console.log('WebSocket Client Connected');\n        };\n\n        webSocket.current.onmessage = message => {\n          const json = JSON.parse(message.data);\n\n          if (json.purpose === \"SESSIONID\") {\n            setSessionID(json.message);\n          } else if (json.purpose === \"USERLIST\") {\n            updateUserList();\n          } else {\n            setRightContent(rightContentRef.current + json.message + \"\\n\");\n            setLeftContent(leftContentRef.current + getNewLineCount(json.message));\n          }\n        };\n\n        webSocket.current.onerror = function () {\n          console.log('Connection Error');\n        };\n      }\n    });\n  }\n\n  function registerMessage(e) {\n    if (recieverInput.current.value === \"\") {\n      messageToAll(e);\n    } else privateMessage(e);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"centerLeft\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"USERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"usersForm\",\n        id: \"usersForm\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"textUsers\",\n            children: usersContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"userFunctionalities\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"loginButton btn-secondary\",\n          onClick: logOut,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"centerMiddle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"CHAT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"chatForm\",\n        id: \"chatForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"textLeft\",\n            children: leftContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"textRight\",\n            children: rightContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chattingFunctionalities\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"sideBySide\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"chatInput\",\n          class: \"form-control inputs inputChat\",\n          ref: chatInput,\n          placeholder: \"Chat here!\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-control inputs inputReciever\",\n          ref: recieverInput,\n          placeholder: \"All\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"loginButton btn-secondary\",\n        onClick: registerMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  function logOutWhenNotConnected(e) {\n    sessionStorage.clear();\n    navigate(\"/\");\n  }\n\n  function logOut(e) {\n    sessionStorage.clear();\n    webSocket.current.close();\n    navigate(\"/\");\n  }\n\n  function getNewLineCount(text) {\n    let newLineCount = text.length / 25;\n    var newlines = \"\";\n\n    for (var i = 0; i < newLineCount; i++) {\n      newlines += \"\\n\";\n    }\n\n    return newlines;\n  }\n}\n\n_s(ChatPage, \"px8yTF/PEIsqQAEQWSttSP1h67c=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ChatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","Button","ChatPage","navigate","webSocket","chatInput","recieverInput","leftContent","setLeftContent","rightContent","setRightContent","usersContent","setUsersContent","sessionID","setSessionID","rightContentRef","leftContentRef","sessionStorage","getItem","isConnected","current","objDiv","document","getElementById","scrollTo","scrollHeight","messageToAll","e","messageText","value","getNewLineCount","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","text","console","log","updateUserList","json","data","message","privateMessage","status","includes","logOutWhenNotConnected","WebSocket","onopen","send","onmessage","parse","purpose","onerror","registerMessage","logOut","clear","close","newLineCount","length","newlines","i"],"sources":["C:/Users/mkant/webclientreact/src/ChatPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport default function ChatPage() {\r\n    const navigate = useNavigate();\r\n    const webSocket = useRef(null);\r\n    const chatInput = useRef()\r\n    const recieverInput = useRef()\r\n    const [leftContent, setLeftContent] = useState([]);\r\n    const [rightContent, setRightContent] = useState([]);\r\n    const [usersContent, setUsersContent] = useState([]);\r\n    const [sessionID, setSessionID] = useState(\"\");\r\n    let rightContentRef = useRef();\r\n    let leftContentRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if(sessionStorage.getItem(\"token\") === null) navigate(\"/\");\r\n        isConnected()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        rightContentRef.current = rightContent;\r\n    }, [rightContent])\r\n\r\n    useEffect(() => {\r\n        leftContentRef.current = leftContent;\r\n        var objDiv = document.getElementById(\"chatForm\");\r\n        objDiv.scrollTo(0,objDiv.scrollHeight)\r\n    }, [leftContent])\r\n\r\n    function messageToAll(e){\r\n        const messageText = chatInput.current.value\r\n        setLeftContent(leftContentRef.current + \"YOU: \" + messageText + \"\\n\");\r\n        setRightContent(rightContentRef.current + getNewLineCount(messageText));\r\n        chatInput.current.value = \"\";\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type': 'application/json'},\r\n            body:JSON.stringify({ \"message\":  sessionStorage.getItem('token') + \": \" + messageText, \"sessionID\": sessionID, \"sender\": sessionStorage.getItem('token') })\r\n        };\r\n\r\n        fetch('http://localhost:8080/ChatServer/messages/all', requestOptions)\r\n        .then(res => res.text())\r\n        .then(res => console.log(res))\r\n    }\r\n\r\n    function updateUserList(e){\r\n        const requestOptions = {\r\n            method: 'GET'\r\n        };\r\n\r\n        fetch('http://localhost:8080/ChatServer/users/loggedIn', requestOptions)\r\n        .then(res => res.json())\r\n        .then(data => setUsersContent(data.message));\r\n    }\r\n\r\n    function privateMessage(e){\r\n        const messageText = chatInput.current.value\r\n        chatInput.current.value = \"\";\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type': 'application/json'},\r\n            body:JSON.stringify({ \"message\":  sessionStorage.getItem('token') + \": \" + messageText, \"sessionID\": sessionID, \"sender\": sessionStorage.getItem('token') })\r\n        };\r\n\r\n        fetch('http://localhost:8080/ChatServer/messages/' + recieverInput.current.value, requestOptions)\r\n        .then(res => {if(res.status === 200) {setLeftContent(leftContentRef.current + \"YOU: \" + messageText + \"\\n\");\r\n        setRightContent(rightContentRef.current + getNewLineCount(messageText));} else {setLeftContent(leftContentRef.current +  \"Cannot send message to user - \" + recieverInput.current.value + \"\\n\");\r\n        setRightContent(rightContentRef.current + getNewLineCount(\"Cannot send message to user - \" + recieverInput.current.value));}})\r\n    }\r\n\r\n    function isConnected(e){\r\n        const requestOptions = {\r\n            method: 'GET'\r\n        };\r\n\r\n        fetch('http://localhost:8080/ChatServer/users/loggedIn', requestOptions)\r\n        .then(res => res.json())\r\n        .then(data => {if(data.message.includes(sessionStorage.getItem(\"token\")+ \"\\n\")) {logOutWhenNotConnected()}else{\r\n        webSocket.current = new WebSocket('ws://localhost:8080/ChatServer/ws');\r\n        webSocket.current.onopen = () => {\r\n            webSocket.current.send(sessionStorage.getItem(\"token\"));\r\n            console.log('WebSocket Client Connected');\r\n        };\r\n    \r\n        webSocket.current.onmessage = (message) => {\r\n            const json = JSON.parse(message.data);\r\n            if(json.purpose === \"SESSIONID\"){\r\n                setSessionID(json.message);\r\n            }\r\n            else if (json.purpose === \"USERLIST\"){\r\n                updateUserList();\r\n            }\r\n            else{\r\n                setRightContent(rightContentRef.current + json.message + \"\\n\");\r\n                setLeftContent(leftContentRef.current + getNewLineCount(json.message));\r\n            }\r\n        };\r\n        webSocket.current.onerror = function() {\r\n            console.log('Connection Error');\r\n        };}});\r\n    }\r\n\r\n    function registerMessage(e){\r\n        if(recieverInput.current.value === \"\"){\r\n            messageToAll(e);\r\n        }\r\n        else privateMessage(e);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"centerLeft\">\r\n                <div class=\"logo\"><b>USERS</b></div>\r\n                <div class=\"usersForm\" id=\"usersForm\">\r\n                    <b><p class=\"textUsers\">{usersContent}</p></b>\r\n                </div>\r\n                <div class=\"userFunctionalities\">\r\n                    <Button className=\"loginButton btn-secondary\" onClick={logOut}>Logout</Button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"centerMiddle\">\r\n                <div class=\"logo\"><b>CHAT</b></div>\r\n                <div class=\"chatForm\" id=\"chatForm\">\r\n                    <b><p class=\"textLeft\">{leftContent}</p></b>\r\n                    <b><p class=\"textRight\">{rightContent}</p></b>\r\n                </div>    \r\n            </div>\r\n            <div class=\"chattingFunctionalities\">\r\n                    <div class=\"sideBySide\">\r\n                        <input id=\"chatInput\" class=\"form-control inputs inputChat\" ref={chatInput} placeholder=\"Chat here!\" required/> \r\n                        <input class=\"form-control inputs inputReciever\" ref={recieverInput} placeholder=\"All\" required/> \r\n                    </div>\r\n                    <Button className=\"loginButton btn-secondary\" onClick={registerMessage}>Send</Button>\r\n                    </div>\r\n        </>\r\n    )\r\n\r\n    function logOutWhenNotConnected(e){\r\n        sessionStorage.clear()\r\n        navigate(\"/\")\r\n    }\r\n\r\n    function logOut(e){\r\n        sessionStorage.clear()\r\n        webSocket.current.close(); \r\n        navigate(\"/\")\r\n    }\r\n\r\n    function getNewLineCount(text){\r\n        let newLineCount = text.length / 25;\r\n        var newlines = \"\";\r\n        for(var i = 0; i < newLineCount; i++){\r\n            newlines += \"\\n\"\r\n        }\r\n        return newlines;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}