{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mkant\\\\webclientreact\\\\src\\\\ChatPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const webSocket = useRef(null);\n  const chatInput = useRef();\n  const recieverInput = useRef();\n  const [leftContent, setLeftContent] = useState([]);\n  const [rightContent, setRightContent] = useState([]);\n  const [usersContent, setUsersContent] = useState([]);\n  const [sessionID, setSessionID] = useState(\"\");\n  let rightContentRef = useRef();\n  let leftContentRef = useRef();\n  useEffect(() => {\n    if (sessionStorage.getItem(\"loggedIn\") !== null) {\n      navigate(\"/\");\n    } else {\n      sessionStorage.setItem(\"loggedIn\", \"true\");\n      webSocket.current = new WebSocket('ws://localhost:8080/ChatServer/ws');\n\n      webSocket.current.onopen = () => {\n        webSocket.current.send(sessionStorage.getItem(\"token\"));\n        console.log('WebSocket Client Connected');\n      };\n\n      webSocket.current.onmessage = message => {\n        const json = JSON.parse(message.data);\n\n        if (json.purpose === \"SESSIONID\") {\n          setSessionID(json.message);\n        } else if (json.purpose === \"USERLIST\") {\n          updateUserList();\n        } else {\n          setRightContent(rightContentRef.current + json.message + \"\\n\");\n          setLeftContent(leftContentRef.current + getNewLineCount(json.message));\n        }\n      };\n\n      webSocket.current.onerror = function () {\n        console.log('Connection Error');\n      };\n    }\n  }, []);\n  useEffect(() => {\n    rightContentRef.current = rightContent;\n  }, [rightContent]);\n  useEffect(() => {\n    leftContentRef.current = leftContent;\n    var chatDiv = document.getElementById(\"chatForm\");\n    chatDiv.scrollTo(0, chatDiv.scrollHeight);\n  }, [leftContent]);\n\n  function messageToAll(e) {\n    const messageText = chatInput.current.value;\n    setLeftContent(leftContentRef.current + \"YOU: \" + messageText + \"\\n\");\n    setRightContent(rightContentRef.current + getNewLineCount(messageText));\n    chatInput.current.value = \"\";\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"message\": sessionStorage.getItem('token') + \": \" + messageText,\n        \"sessionID\": sessionID,\n        \"sender\": sessionStorage.getItem('token')\n      })\n    };\n    fetch('http://localhost:8080/ChatServer/messages/all', requestOptions).then(res => res.text()).then(res => console.log(res));\n  }\n\n  function updateUserList(e) {\n    const requestOptions = {\n      method: 'GET'\n    };\n    fetch('http://localhost:8080/ChatServer/users/loggedIn', requestOptions).then(res => res.json()).then(data => setUsersContent(data.message));\n  }\n\n  function privateMessage(e) {\n    const messageText = chatInput.current.value;\n    chatInput.current.value = \"\";\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"message\": sessionStorage.getItem('token') + \": \" + messageText,\n        \"sessionID\": sessionID,\n        \"sender\": sessionStorage.getItem('token'),\n        \"reciever\": recieverInput.current.value\n      })\n    };\n    fetch('http://localhost:8080/ChatServer/messages/user', requestOptions).then(res => {\n      if (res.status === 200) {\n        setLeftContent(leftContentRef.current + \"YOU: \" + messageText + \"\\n\");\n        setRightContent(rightContentRef.current + getNewLineCount(messageText));\n      } else {\n        setLeftContent(leftContentRef.current + \"Cannot send message to user - \" + recieverInput.current.value + \"\\n\");\n        setRightContent(rightContentRef.current + getNewLineCount(\"Cannot send message to user - \" + recieverInput.current.value));\n      }\n    });\n  }\n\n  function registerMessage(e) {\n    if (recieverInput.current.value === \"\") {\n      messageToAll(e);\n    } else privateMessage(e);\n  }\n\n  function logOut(e) {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"sessionID\": sessionID\n      })\n    };\n    fetch('http://localhost:8080/ChatServer/users/loggedIn/' + sessionStorage.getItem(\"token\"), requestOptions).then(res => {\n      if (res.status === 200) navigate(\"/\");\n    });\n  }\n\n  function getNewLineCount(text) {\n    let newLineCount = text.length / 25;\n    var newlines = \"\";\n\n    for (var i = 0; i < newLineCount; i++) {\n      newlines += \"\\n\";\n    }\n\n    return newlines;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"centerLeft\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"ONLINE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"usersForm\",\n        id: \"usersForm\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"textUsers\",\n            children: usersContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"loginButton btn-secondary\",\n        onClick: logOut,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"centerMiddle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"CHAT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"chatForm\",\n        id: \"chatForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"textLeft\",\n            children: leftContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"textRight\",\n            children: rightContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chattingFunctionalities\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"sideBySide\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"chatInput\",\n          class: \"form-control inputs inputChat\",\n          ref: chatInput,\n          placeholder: \"Chat here!\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-control inputs inputReciever\",\n          ref: recieverInput,\n          placeholder: \"All\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"loginButton btn-secondary\",\n        onClick: registerMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatPage, \"px8yTF/PEIsqQAEQWSttSP1h67c=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ChatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","Button","ChatPage","navigate","webSocket","chatInput","recieverInput","leftContent","setLeftContent","rightContent","setRightContent","usersContent","setUsersContent","sessionID","setSessionID","rightContentRef","leftContentRef","sessionStorage","getItem","setItem","current","WebSocket","onopen","send","console","log","onmessage","message","json","JSON","parse","data","purpose","updateUserList","getNewLineCount","onerror","chatDiv","document","getElementById","scrollTo","scrollHeight","messageToAll","e","messageText","value","requestOptions","method","headers","body","stringify","fetch","then","res","text","privateMessage","status","registerMessage","logOut","newLineCount","length","newlines","i"],"sources":["C:/Users/mkant/webclientreact/src/ChatPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport default function ChatPage() {\r\n    const navigate = useNavigate();\r\n    const webSocket = useRef(null);\r\n    const chatInput = useRef()\r\n    const recieverInput = useRef()\r\n    const [leftContent, setLeftContent] = useState([]);\r\n    const [rightContent, setRightContent] = useState([]);\r\n    const [usersContent, setUsersContent] = useState([]);\r\n    const [sessionID, setSessionID] = useState(\"\");\r\n    let rightContentRef = useRef();\r\n    let leftContentRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if(sessionStorage.getItem(\"loggedIn\") !== null) {\r\n            navigate(\"/\");\r\n        }\r\n        else{\r\n            sessionStorage.setItem(\"loggedIn\", \"true\");\r\n\r\n            webSocket.current = new WebSocket('ws://localhost:8080/ChatServer/ws');\r\n            webSocket.current.onopen = () => {\r\n                webSocket.current.send(sessionStorage.getItem(\"token\"));\r\n                console.log('WebSocket Client Connected');\r\n            };\r\n        \r\n            webSocket.current.onmessage = (message) => {\r\n                const json = JSON.parse(message.data);\r\n                if(json.purpose === \"SESSIONID\"){\r\n                    setSessionID(json.message);\r\n                }\r\n                else if (json.purpose === \"USERLIST\"){\r\n                    updateUserList();\r\n                }\r\n                else{\r\n                    setRightContent(rightContentRef.current + json.message + \"\\n\");\r\n                    setLeftContent(leftContentRef.current + getNewLineCount(json.message));\r\n                }\r\n            };\r\n            webSocket.current.onerror = function() {\r\n                console.log('Connection Error');\r\n            };\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        rightContentRef.current = rightContent;\r\n    }, [rightContent])\r\n\r\n    useEffect(() => {\r\n        leftContentRef.current = leftContent;\r\n        var chatDiv = document.getElementById(\"chatForm\");\r\n        chatDiv.scrollTo(0,chatDiv.scrollHeight)\r\n    }, [leftContent])\r\n\r\n    function messageToAll(e){\r\n        const messageText = chatInput.current.value\r\n        setLeftContent(leftContentRef.current + \"YOU: \" + messageText + \"\\n\");\r\n        setRightContent(rightContentRef.current + getNewLineCount(messageText));\r\n        chatInput.current.value = \"\";\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type': 'application/json'},\r\n            body:JSON.stringify({ \"message\":  sessionStorage.getItem('token') + \": \" + messageText, \"sessionID\": sessionID, \"sender\": sessionStorage.getItem('token') })\r\n        };\r\n        fetch('http://localhost:8080/ChatServer/messages/all', requestOptions)\r\n        .then(res => res.text())\r\n        .then(res => console.log(res))\r\n    }\r\n\r\n    function updateUserList(e){\r\n        const requestOptions = {\r\n            method: 'GET'\r\n        };\r\n        fetch('http://localhost:8080/ChatServer/users/loggedIn', requestOptions)\r\n        .then(res => res.json())\r\n        .then(data => setUsersContent(data.message));\r\n    }\r\n\r\n    function privateMessage(e){\r\n        const messageText = chatInput.current.value\r\n        chatInput.current.value = \"\";\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type': 'application/json'},\r\n            body:JSON.stringify({ \"message\":  sessionStorage.getItem('token') + \": \" + messageText, \"sessionID\": sessionID, \"sender\": sessionStorage.getItem('token'), \"reciever\": recieverInput.current.value})\r\n        };\r\n\r\n        fetch('http://localhost:8080/ChatServer/messages/user', requestOptions)\r\n        .then(res => {if(res.status === 200) {setLeftContent(leftContentRef.current + \"YOU: \" + messageText + \"\\n\");\r\n        setRightContent(rightContentRef.current + getNewLineCount(messageText));} else {setLeftContent(leftContentRef.current +  \"Cannot send message to user - \" + recieverInput.current.value + \"\\n\");\r\n        setRightContent(rightContentRef.current + getNewLineCount(\"Cannot send message to user - \" + recieverInput.current.value));}})\r\n    }\r\n\r\n    function registerMessage(e){\r\n        if(recieverInput.current.value === \"\"){\r\n            messageToAll(e);\r\n        }\r\n        else privateMessage(e);\r\n    }\r\n\r\n    function logOut(e){\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: { \r\n                'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\"sessionID\": sessionID})\r\n        };\r\n        fetch('http://localhost:8080/ChatServer/users/loggedIn/' + sessionStorage.getItem(\"token\"), requestOptions)\r\n        .then(res => {if(res.status === 200) navigate(\"/\")});\r\n    }\r\n\r\n    function getNewLineCount(text){\r\n        let newLineCount = text.length / 25;\r\n        var newlines = \"\";\r\n        for(var i = 0; i < newLineCount; i++){\r\n            newlines += \"\\n\"\r\n        }\r\n        return newlines;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"centerLeft\">\r\n                <div class=\"logo\"><b>ONLINE</b></div>\r\n                <div class=\"usersForm\" id=\"usersForm\">\r\n                    <b><p class=\"textUsers\">{usersContent}</p></b>\r\n                </div>\r\n                <Button className=\"loginButton btn-secondary\" onClick={logOut}>Logout</Button>\r\n            </div>\r\n\r\n            <div class=\"centerMiddle\">\r\n                <div class=\"logo\"><b>CHAT</b></div>\r\n                <div class=\"chatForm\" id=\"chatForm\">\r\n                    <b><p class=\"textLeft\">{leftContent}</p></b>\r\n                    <b><p class=\"textRight\">{rightContent}</p></b>\r\n                </div>    \r\n            </div>\r\n            <div class=\"chattingFunctionalities\">\r\n                <div class=\"sideBySide\">\r\n                    <input id=\"chatInput\" class=\"form-control inputs inputChat\" ref={chatInput} placeholder=\"Chat here!\" required/> \r\n                    <input class=\"form-control inputs inputReciever\" ref={recieverInput} placeholder=\"All\" required/> \r\n                </div>\r\n                <Button className=\"loginButton btn-secondary\" onClick={registerMessage}>Send</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}